(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{285:function(a,e,o){"use strict";o.r(e);var s=o(37),r=Object(s.a)({},function(){var a=this,e=a.$createElement,o=a._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"se-virando-no-git"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#se-virando-no-git","aria-hidden":"true"}},[a._v("#")]),a._v(" Se virando no Git")]),a._v(" "),o("h2",{attrs:{id:"git"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" Git")]),a._v(" "),o("p",[a._v("Git é um sistema de controle de versão de arquivos. Através deles podemos desenvolver projetos na qual diversas pessoas podem contribuir simultaneamente no mesmo, permitindo que os mesmos possam existir sem o risco de suas alterações serem sobrescritas. Se não houvesse um sistema de versão, imagine o caos entre duas pessoas abrindo o mesmo arquivo ao mesmo tempo. Uma das aplicações do git é justamente essa, permitir que um arquivo possa ser editado ao mesmo tempo por pessoas diferentes.")]),a._v(" "),o("h3",{attrs:{id:"instalacao"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#instalacao","aria-hidden":"true"}},[a._v("#")]),a._v(" Instalação")]),a._v(" "),o("p",[a._v("Muitas das distribuições do Linux mais atuais já vêm com o git instalado. Verifique se o git já está instalado em sua máquina. No terminal, execute:")]),a._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[o("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" --version\n")])])]),o("p",[a._v("A saída do comando deve ser algo similar ao seguinte:")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("git version 2.17.2\n")])])]),o("p",[a._v("Caso você não tenha o git na máquina, instale-o com este comando (via terminal - Linux):")]),a._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[o("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v("\n")])])]),o("p",[a._v("Depois de instalar, a primeira coisa que você deve fazer é configurar o Git. Para isso, abra uma janela de terminal e digite os seguintes comandos:")]),a._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[a._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.name "),o("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Seu Nome"')]),a._v("\n "),o("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.email "),o("span",{pre:!0,attrs:{class:"token string"}},[a._v('"seu@email.com"')]),a._v("\n")])])]),o("p",[a._v("A partir daí, o Git irá usar essas informações para registrar quem foi que fez as alterações nos arquivos.")]),a._v(" "),o("p",[a._v("Após isso já poderá realizar os comando do git pelo terminal.")]),a._v(" "),o("p",[o("strong",[a._v("Nota")])]),a._v(" "),o("blockquote",[o("p",[a._v("Esse exemplo configura o mesmo usuário para todos os projetos presentes no computador (isso se dá por conta da flag --global).\nPodemos também configurar usuários para cada projeto individualmente, basta acessar a pasta do projeto em questão e executar os mesmos\ncomandos do exemplo sem a flag "),o("code",[a._v("--global")]),a._v(".")])]),a._v(" "),o("h2",{attrs:{id:"comando-basicos"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comando-basicos","aria-hidden":"true"}},[a._v("#")]),a._v(" Comando básicos")]),a._v(" "),o("p",[o("strong",[a._v("Criando um repositório:")])]),a._v(" "),o("p",[a._v("Criar um repositório no Git é muito simples, apenas siga esta sequência completa dos comandos:")]),a._v(" "),o("p",[o("code",[a._v("mkdir meu-projeto")]),a._v("(irá criar o diretório)")]),a._v(" "),o("p",[o("code",[a._v("cd meu-projeto")]),a._v("(irá entrar dentro do diretório)")]),a._v(" "),o("p",[o("code",[a._v("git init")]),a._v("(irá criar o repositório git)")]),a._v(" "),o("p",[a._v("Após isso, basta começar a trabalhar, criando, removendo e alterando arquivos.")]),a._v(" "),o("p",[o("strong",[a._v("Outros Comandos:")])]),a._v(" "),o("p",[o("code",[a._v("git clone [link do repositório]")]),a._v(" Para clonar o projeto do repositório;")]),a._v(" "),o("p",[o("code",[a._v("git checkout -b [nome da branch]")]),a._v(" Para criar uma nova branch;")]),a._v(" "),o("p",[o("code",[a._v("git checkout [nome da branch]")]),a._v(" Para trocar de branch;")]),a._v(" "),o("p",[o("code",[a._v("git status")]),a._v(" Para você visualizar os arquivos que modificou;")]),a._v(" "),o("p",[o("code",[a._v("git add .")]),a._v(" Para você adicionar as modificações feitas;")]),a._v(" "),o("p",[o("code",[a._v("git commit -m [“mensagem”]")]),a._v(" Para você comentar brevemente sobre as modificações feitas;")]),a._v(" "),o("p",[o("code",[a._v("git push origin [nome da branch]")]),a._v(" Sobe as alterações feitas para a branch remota(para onde quero enviar, por isso usamos "),o("em",[a._v("origin")]),a._v(") do "),o("strong",[a._v("GitHub")])]),a._v(" "),o("p",[o("code",[a._v("git pull origin master")]),a._v(" Recebe as alterações feitas na branch remota origin master;")]),a._v(" "),o("p",[a._v("Mas se houver conflitos:")]),a._v(" "),o("p",[o("code",[a._v("git pull -r origin master")]),a._v(" Facilita na hora de resolver conflitos.")]),a._v(" "),o("p",[a._v("Ex: Deram push em uma atualização de código da linha 11, e você localmente modificou esta linha e quer dar push, o git ficará sem saber o que fazer e resultará em conflitos, você terá que escolher entre uma das atualizações,ou em deixar as duas.")]),a._v(" "),o("p",[a._v("Após isso para ter certeza de que não tenha mais nada diferente execute:")]),a._v(" "),o("p",[o("code",[a._v("git rebase --continue")])]),a._v(" "),o("p",[o("strong",[a._v("Nota:")]),a._v(" Este comando só funcionará se usar a flag "),o("code",[a._v("-r")]),a._v(" no "),o("code",[a._v("git pull")])]),a._v(" "),o("p",[a._v("Se não houver mais conflito pode dar seu push tranquilo, caso contrario terá que resolver todos os conflitos para dar push.")]),a._v(" "),o("p",[o("code",[a._v("git reverse --hard HEAD~1")]),a._v(" Exclui commit local")]),a._v(" "),o("p",[a._v("Caso já tenha enviado ao seu repositório será necessário executar este comando também para exclui-lo:")]),a._v(" "),o("p",[o("code",[a._v("git push origin HEAD --force")])]),a._v(" "),o("p",[o("strong",[a._v("Importante: Não é muito recomendável usar estes últimos dois comandos exceto em casos muito extremos, eles podem causar grandes complicações.")])]),a._v(" "),o("h2",{attrs:{id:"github"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#github","aria-hidden":"true"}},[a._v("#")]),a._v(" GitHub")]),a._v(" "),o("p",[a._v("O GitHub é uma plataforma de hospedagem de código-fonte com controle de versão usando Git. Nele criamos repositórios onde colocamos nossos projetos que vamos desenvolver. No Github o projeto é dividido em branches,elas são separações de código. Normalmente são utilizados para separar alterações ou novas funcionalidades do projeto.")]),a._v(" "),o("h2",{attrs:{id:"exercicios-de-fixacao"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#exercicios-de-fixacao","aria-hidden":"true"}},[a._v("#")]),a._v(" Exercícios de Fixação")]),a._v(" "),o("p",[a._v("Baseado no material desta apostila informe os comandos necessários para realizar cada uma das tarefas a seguir:")]),a._v(" "),o("p",[a._v("Imagine que criamos um repositório no GitHub:")]),a._v(" "),o("ul",[o("li",[a._v("[ ] Clone este repositório para seu computador")]),a._v(" "),o("li",[a._v("[ ] Crie uma branch")]),a._v(" "),o("li",[a._v("[ ] Entre na branch criada")]),a._v(" "),o("li",[a._v("[ ] Envie as modificações para o repositório")]),a._v(" "),o("li",[a._v("[ ] Acesse o site do GitHub e crie um repositório chamado "),o("code",[a._v("exercicioGitHubAcelera")])]),a._v(" "),o("li",[a._v("[ ] Agora, dentro de algum diretório de seu computador, inicie um repositório Git local")]),a._v(" "),o("li",[a._v("[ ] Clone este repositório ("),o("code",[a._v("exercicioGitHubAcelera")]),a._v(") para seu computador")]),a._v(" "),o("li",[a._v("[ ] Faça qualquer alteração neste diretório (crie arquivos novos, modifique algum existente e etc) e em seguida adicione estas alterações neste repositório Git local")]),a._v(" "),o("li",[a._v("[ ] Realize um "),o("code",[a._v("commit")]),a._v(" destas alterações ao seu repositório Git local, informando uma mensagem explicando o que esta sendo salvo neste "),o("code",[a._v("commit")])]),a._v(" "),o("li",[a._v("[ ] Agora, envie as modificações para o repositório")])])])},[],!1,null,null,null);e.default=r.exports}}]);